from rust_llm import BPETokenizer as RuBPETokenizer

from minbpe.bpe import BPETokenizer as PyBPETokenizer

if __name__ == "__main__":
    # TRAINING TOKENIZERS
    text = open(
        "taylorswift.txt",
        "r",
        encoding="utf-8",
    ).read()

    # Python
    # pytok = PyBPETokenizer()
    # train(pytok, text, 512, "Python")

    # Rust
    rutok = RuBPETokenizer()
    rutok.train(text, 260, verbose=False)
    rutok.save_model("rust")

    # Python
    # pytok = PyBPETokenizer()
    # pytok.train(text, 260, verbose=False)

"""
[DEBUG] Initial IDs: {} [67, 111, 112, 121, 32, 112, 97, 115, 116, 101, 32, 111, 102, 32, 116, 104, 101, 32, 87, 105, 107, 105, 112, 101, 100, 105, 97, 32, 97, 114, 116, 105, 99, 108, 101, 32, 111, 110, 32, 84, 97, 121, 108, 111, 114, 32, 83, 119, 105, 102, 116, 44, 32, 97, 115, 32, 111, 102, 32, 70, 101, 98, 32, 49, 54, 44, 32, 50, 48, 50, 52, 46, 10, 45, 45, 45, 10, 10, 77, 97, 105, 110, 32, 109, 101, 110, 117, 10, 10, 87, 105, 107, 105, 112, 101, 100, 105, 97, 84, 104]

[DEBUG] Training complete. Merges: {(46, 32): 259, (100, 32): 258, (101, 32): 256, (44, 32): 257}
[DEBUG] Training complete. Vocab: {193: [193], 203: [203], 0: [0], 23: [23], 65: [65], 82: [82], 191: [191], 9: [9], 91: [91], 159: [159], 216: [216], 227: [227], 174: [174], 128: [128], 11: [11], 254: [254], 30: [30], 123: [123], 221: [221], 244: [244], 222: [222], 250: [250], 52: [52], 121: [121], 19: [19], 145: [145], 148: [148], 240: [240], 40: [40], 238: [238], 137: [137], 212: [212], 107: [107], 59: [59], 15: [15], 236: [236], 234: [234], 86: [86], 34: [34], 258: [100, 32], 35: [35], 68: [68], 143: [143], 101: [101], 169: [169], 1: [1], 200: [200], 38: [38], 81: [81], 84: [84], 112: [112], 185: [185], 202: [202], 239: [239], 248: [248], 36: [36], 2: [2], 76: [76], 50: [50], 60: [60], 75: [75], 164: [164], 41: [41], 87: [87], 166: [166], 61: [61], 97: [97], 206: [206], 94: [94], 64: [64], 197: [197], 160: [160], 136: [136], 172: [172], 257: [44, 32], 73: [73], 54: [54], 178: [178], 106: [106], 18: [18], 194: [194], 155: [155], 177: [177], 25: [25], 245: [245], 211: [211], 230: [230], 51: [51], 108: [108], 8: [8], 175: [175], 102: [102], 111: [111], 71: [71], 37: [37], 79: [79], 29: [29], 127: [127], 199: [199], 207: [207], 5: [5], 124: [124], 249: [249], 219: [219], 95: [95], 188: [188], 153: [153], 69: [69], 237: [237], 139: [139], 149: [149], 133: [133], 170: [170], 213: [213], 115: [115], 53: [53], 118: [118], 162: [162], 225: [225], 142: [142], 154: [154], 26: [26], 187: [187], 70: [70], 168: [168], 109: [109], 98: [98], 243: [243], 217: [217], 28: [28], 223: [223], 125: [125], 88: [88], 135: [135], 103: [103], 10: [10], 22: [22], 167: [167], 241: [241], 214: [214], 67: [67], 144: [144], 21: [21], 116: [116], 186: [186], 80: [80], 85: [85], 93: [93], 24: [24], 201: [201], 171: [171], 92: [92], 182: [182], 224: [224], 32: [32], 215: [215], 247: [247], 83: [83], 110: [110], 141: [141], 235: [235], 119: [119], 173: [173], 195: [195], 242: [242], 140: [140], 152: [152], 246: [246], 45: [45], 100: [100], 198: [198], 184: [184], 31: [31], 14: [14], 20: [20], 77: [77], 27: [27], 63: [63], 126: [126], 157: [157], 7: [7], 218: [218], 48: [48], 66: [66], 158: [158], 209: [209], 55: [55], 165: [165], 122: [122], 156: [156], 252: [252], 49: [49], 99: [99], 151: [151], 13: [13], 17: [17], 134: [134], 89: [89], 44: [44], 176: [176], 72: [72], 210: [210], 228: [228], 253: [253], 56: [56], 105: [105], 114: [114], 190: [190], 58: [58], 138: [138], 181: [181], 46: [46], 113: [113], 6: [6], 131: [131], 163: [163], 189: [189], 96: [96], 204: [204], 226: [226], 208: [208], 251: [251], 62: [62], 33: [33], 205: [205], 231: [231], 12: [12], 130: [130], 3: [3], 120: [120], 132: [132], 179: [179], 16: [16], 183: [183], 256: [101, 32], 146: [146], 47: [47], 104: [104], 43: [43], 229: [229], 161: [161], 192: [192], 117: [117], 129: [129], 42: [42], 196: [196], 232: [232], 90: [90], 255: [255], 78: [78], 57: [57], 4: [4], 220: [220], 39: [39], 74: [74], 180: [180], 259: [46, 32], 150: [150], 147: [147], 233: [233]}
"""
